{"version":3,"sources":["song.js","navigation.js","script.js"],"names":["song","songData","i","p","c","n","f","rowLen","patternLen","endPattern","numChannels","navigation","init","g","document","getElementById","addEventListener","e","dir","update","getRoom","pos","style","opacity","drawRoom","w","h","w2","h2","room","code","code10","generateSelect","Array","prototype","map","call","getElementsByTagName","s","value","reduce","t","v","code30","choices","from","keys","code60","alphaR0","alphaR1","alphaR2","ready","fn","readyState","options","setCanvas","window","innerHeight","innerWidth","width","height","xdiff","Math","round","ydiff","nav","bottom","relativePos","r","getNextRoomColor","nextRoomIndex","getNextNextRoomColor","nextNextRoomIndex","length","console","log","msgContainer","display","codeContainer","ctx","clearRect","fillStyle","fillRect","grd","createLinearGradient","addColorStop","line","drawWall","startsWith","save","aa","bb","translate","beginPath","moveTo","lineTo","fill","stroke","restore","nextRoom","codeInput","innerHTML","msg","innerText","rect","CPlayer","songs","getContext","undefined","x1","y1","x2","y2","x3","y3","x4","y4","a1","a2","osc_sin","mSong","mLastRow","mCurrentCol","mNumWords","mMixBuf","sin","getnotefreq","pow","createNote","instr","osc1","j","j2","rsample","o1t","o2t","mOscillators","o1vol","o1xenv","osc2","o2vol","o2xenv","noiseVol","attack","sustain","release","releaseInv","arp","arpInterval","noteBuf","Int32Array","c1","c2","random","v2","generate","row","col","cp","k","rowStartSample","high","lsample","chnBuf","low","band","filterActive","noteCache","cmdNo","oscLFO","lfoAmt","lfoFreq","fxLFO","fxFilter","fxFreq","q","dist","drive","panAmt","panFreq","dlyAmt","dly","createWave","headerLen","l1","l2","wave","Uint8Array","set","idx","y","getData","floor","d"],"mappings":"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","file":"script.e353b66d.js","sourceRoot":"..","sourcesContent":["    // This music has been exported by SoundBox. You can use it with\n    // http://sb.bitsnbites.eu/player-small.js in your own product.\n\n    // See http://sb.bitsnbites.eu/demo.html for an example of how to\n    // use it in a demo.\n\n    // Song data\n    export const song = {\n      songData: [\n        { // Instrument 0\n          i: [\n          2, // OSC1_WAVEFORM\n          100, // OSC1_VOL\n          128, // OSC1_SEMI\n          0, // OSC1_XENV\n          3, // OSC2_WAVEFORM\n          201, // OSC2_VOL\n          128, // OSC2_SEMI\n          0, // OSC2_DETUNE\n          0, // OSC2_XENV\n          0, // NOISE_VOL\n          5, // ENV_ATTACK\n          6, // ENV_SUSTAIN\n          58, // ENV_RELEASE\n          0, // ARP_CHORD\n          0, // ARP_SPEED\n          0, // LFO_WAVEFORM\n          195, // LFO_AMT\n          6, // LFO_FREQ\n          1, // LFO_FX_FREQ\n          2, // FX_FILTER\n          135, // FX_FREQ\n          0, // FX_RESONANCE\n          0, // FX_DIST\n          32, // FX_DRIVE\n          147, // FX_PAN_AMT\n          6, // FX_PAN_FREQ\n          121, // FX_DELAY_AMT\n          6 // FX_DELAY_TIME\n          ],\n          // Patterns\n          p: [1],\n          // Columns\n          c: [\n            {n: [123,,135,130,123,,123,,130,131,128,,123,,123,130,135,,135,,123,131,130,,126,,138,,137,,130],\n             f: []}\n          ]\n        },\n      ],\n      rowLen: 5513,   // In sample lengths\n      patternLen: 32,  // Rows per pattern\n      endPattern: 0,  // End pattern\n      numChannels: 1  // Number of channels\n    };\n\n","export const navigation = {\r\n    init: function(g) {\r\n        this.g = g;\r\n        document.getElementById(\"nav-left\").addEventListener(\"click\", (e) => {\r\n            g.dir--;\r\n            if(g.dir < 0) { g.dir = 3}\r\n            this.update();\r\n        });\r\n\r\n        document.getElementById(\"nav-right\").addEventListener(\"click\", (e) => {\r\n            g.dir++;\r\n            if(g.dir > 3) { g.dir = 0}\r\n            this.update();\r\n        });\r\n\r\n        document.getElementById(\"nav-forward\").addEventListener(\"click\", (e) => {\r\n            \r\n            const r = g.getRoom();\r\n            if(r[1] === 0) {\r\n                g.pos += (g.dir === 0 ? 1 : -1);\r\n            }\r\n            this.update();\r\n        });\r\n\r\n\r\n    },\r\n    update: function() {\r\n        document.getElementById(\"nav-forward\").style.opacity = 1\r\n\r\n        this.g.drawRoom();\r\n        \r\n        const r = this.g.getRoom();\r\n        if(r[1] !== 0) {\r\n            document.getElementById(\"nav-forward\").style.opacity = 0\r\n        }\r\n    }\r\n}\r\n\r\n","import * as songs from './song.js';\r\nimport { navigation} from './navigation.js';\r\n\r\nlet g = {\r\n    w: 500,\r\n    h: 250,\r\n    w2: 500/2,\r\n    h2: 250/2,\r\n    pos: 0,\r\n    dir: 2,\r\n    room: [\r\n        [1,0,1,1, \"#898989\",0,0,0,\"You should not be here\"],\r\n        [1,1,1,0, \"#898989\",0,\"code10\",0,0],\r\n        [1,0,1,0, \"#e7fbbd\",0,0,0,0],\r\n        [1,1,1,0, \"#898989\",0,\"code30\",0,0],\r\n        [1,0,1,0, \"#bee5c7\",0,0,0,0],\r\n        [1,0,1,0, \"#898989\",0,0,\"Andrea was always such a square\",0],\r\n        [1,1,1,0, \"#898989\",0,\"code60\",0,0],\r\n    ],\r\n    code: {\r\n        code10: [\"c10\",\"404\", ()=> {\r\n                return generateSelect([4])+generateSelect([0])+generateSelect([4]);\r\n            },()=> {\r\n                return Array.prototype.map.call(document.getElementsByTagName(\"select\"), (s) => s.value).reduce((t, v) => t + v, \"\");\r\n            }, () => {\r\n                g.room[1][1] = 0;\r\n                g.room[1][4] = \"#e7fbbd\";\r\n            }],\r\n        code30: [\"c30\",\"404\", ()=> {\r\n                const choices = Array.from(Array(10).keys());\r\n                return generateSelect(choices)+generateSelect(choices)+generateSelect(choices);\r\n            },()=> {\r\n                return Array.prototype.map.call(document.getElementsByTagName(\"select\"), (s) => s.value).reduce((t, v) => t + v, \"\");\r\n            }, () => {\r\n                g.room[3][1] = 0;\r\n                g.room[3][4] = \"#bee5c7\";\r\n            }],\r\n        code60: [\"c60\",\"16016\", ()=> {\r\n                const choices = Array.from(Array(21).keys());\r\n                return generateSelect(choices)+generateSelect(choices)+generateSelect(choices);\r\n            },()=> {\r\n                return Array.prototype.map.call(document.getElementsByTagName(\"select\"), (s) => s.value).reduce((t, v) => t + v, \"\");\r\n            }, () => {\r\n                g.room[3][1] = 0;\r\n                g.room[3][4] = \"#bee5c7\";\r\n            }],\r\n    },\r\n    alphaR0: \"rgba(0,0,0,0)\",\r\n    alphaR1: \"rgba(0,0,0,0.2)\",\r\n    alphaR2: \"rgba(0,0,0,0.9)\",\r\n};\r\n\r\nfunction ready(fn) {\r\n    if (document.readyState != 'loading'){\r\n        fn();\r\n    } else {\r\n        document.addEventListener('DOMContentLoaded', fn);\r\n    }\r\n}\r\n\r\nfunction generateSelect(options) {\r\n    return `<select>${options.reduce( (p,c) => p + `<option>${c}</option>`, \"\")}</select>`\r\n}\r\n\r\nfunction setCanvas() {\r\n    let h = window.innerHeight - 20;\r\n    let w = window.innerWidth - 20;\r\n\r\n    if(h > 800) {\r\n        h = 800;\r\n    } \r\n\r\n    if(w > 800) {\r\n        w = 800;\r\n    }\r\n\r\n    g.w = w;\r\n    g.w2 = w/2;\r\n    g.h = h;\r\n    g.h2 = h/2\r\n\r\n    g.c = document.getElementById(\"canvas\");\r\n\r\n    g.c.width = w;\r\n    g.c.height = h; \r\n\r\n    g.xdiff = Math.round(g.w > g.h ? g.w/10 : g.w/8);\r\n    g.ydiff = Math.round(g.w > g.h ? g.h/8 : g.h/15);\r\n\r\n    const nav = document.getElementById(\"navigation\")\r\n    nav.style.bottom = `${g.ydiff}px`\r\n    nav.style.height = `${1.5*g.ydiff}px`\r\n}\r\n\r\nready(() => {\r\n\r\n    var player = new CPlayer();\r\n    player.init(songs.song);\r\n\r\n    g.drawRoom = drawRoom;\r\n    g.getRoom = getRoom;\r\n\r\n    g.c = document.getElementById(\"canvas\");\r\n\r\n    setCanvas();\r\n\r\n    g.ctx = g.c.getContext(\"2d\");\r\n    g.msg = document.getElementById(\"message\")\r\n    g.msgContainer = document.getElementById(\"messagecontainer\")\r\n    g.codeContainer = document.getElementById(\"codecontainer\");\r\n    g.codeInput = document.getElementById(\"code\");\r\n\r\n    navigation.init(g);\r\n\r\n    document.getElementById(\"solve\").addEventListener(\"click\", () => {\r\n        \r\n        const c = g.code[`code${g.pos}${g.dir}`];\r\n        if(c[3]() === c[1]) {\r\n            c[4]();\r\n            g.code[`c${g.pos}${g.dir}`] = undefined;\r\n            navigation.update();\r\n            // correct\r\n        } else {\r\n            // wrong code\r\n        };\r\n    })\r\n\r\n    // g.c.addEventListener(\"click\", (e) => {\r\n\r\n    //     // player.generate();\r\n\r\n    //     // var wave = player.createWave();\r\n    //     // const audio = document.getElementById(\"asong\");\r\n    //     // audio.src = URL.createObjectURL(new Blob([wave], {type: \"audio/wav\"}));\r\n    //     // audio.load();\r\n    //     // audio.play();\r\n\r\n    //     const x = e.offsetX;\r\n    //     const y = e.offsetY;\r\n\r\n    //     if(x < g.xdiff) {\r\n    //         g.dir--;\r\n    //         if(g.dir < 0) { g.dir = 3}\r\n    //     } else if(x > g.w-g.xdiff) {\r\n    //         g.dir++;\r\n    //         if(g.dir > 3) { g.dir = 0}\r\n    //     } else {\r\n    //         const r = getRoom();\r\n    //         if(r[1] === 0) {\r\n    //             g.pos += (g.dir === 0 ? 1 : -1);\r\n    //         }\r\n    //     }\r\n\r\n    //     console.log(\"pos: \" + g.pos)\r\n\r\n    //     drawRoom();\r\n\r\n    //     // g.ctx.font = \"30px Arial\";\r\n    //     // g.ctx.fillStyle = \"red\";\r\n    //     // g.ctx.fillText(`${e.clientX - c.offsetLeft + g.w2},${e.clientY - c.offsetTop + g.h2}`, 10, 50);\r\n    // })\r\n\r\n\r\n    g.ctx.line = function(x1,y1,x2,y2) {\r\n        this.beginPath();\r\n        this.moveTo(x1, y1);\r\n        this.lineTo(x2, y2);\r\n        this.stroke();\r\n    }\r\n\r\n    g.ctx.drawWall = function(x1,y1,x2,y2,x3,y3,x4,y4,fill,a1,a2) {\r\n        g.ctx.beginPath();\r\n\r\n        g.ctx.moveTo(x1,y1);\r\n        g.ctx.lineTo(x2,y2);\r\n        g.ctx.lineTo(x3,y3);\r\n        g.ctx.lineTo(x4,y4);\r\n        g.ctx.lineTo(x1,y1);\r\n\r\n        var grd = g.ctx.createLinearGradient(x1, y1, x2, y1);\r\n        grd.addColorStop(0, a1);\r\n        grd.addColorStop(1, a2);\r\n        g.ctx.fillStyle = fill;\r\n        g.ctx.fill();\r\n        g.ctx.fillStyle = grd;\r\n        g.ctx.fill();\r\n\r\n        g.ctx.line(x1,y1,x2,y2)\r\n        g.ctx.line(x3,y3,x4,y4)\r\n    }\r\n\r\n    // drawRoom();\r\n\r\n    navigation.update();\r\n\r\n});\r\n\r\nfunction getRoom(relativePos = 0) {\r\n\r\n    if(relativePos != 0) {\r\n        if(g.dir === 0) relativePos = g.pos + 1;\r\n\r\n        if(g.dir === 2) relativePos = g.pos - 1;\r\n    } else {\r\n        relativePos = g.pos;\r\n    }\r\n\r\n    const r = g.room[relativePos];\r\n    switch(g.dir) {\r\n        case 0:\r\n            return [r[0],r[1],r[2], r[4], r[5],r[6],r[7]];\r\n        case 1:\r\n            return [r[1],r[2],r[3], r[4], r[6],r[7],r[8]];\r\n        case 2:\r\n            return [r[2],r[3],r[0], r[4], r[7],r[8],r[5]];            \r\n        case 3:\r\n            return [r[3],r[0],r[1], r[4], r[8],r[5],r[6]];\r\n    }\r\n}\r\n\r\nfunction getNextRoomColor() {\r\n\r\n    const nextRoomIndex = (g.dir === 0 || g.dir === 3) ? g.pos+1 : g.pos-1;\r\n\r\n    return g.room[nextRoomIndex][4]\r\n}\r\n\r\nfunction getNextNextRoomColor() {\r\n\r\n    let nextNextRoomIndex = (g.dir === 0 || g.dir === 3) ? g.pos+2 : g.pos-2;\r\n\r\n    if(nextNextRoomIndex >= g.room.length) {\r\n        nextNextRoomIndex = nextNextRoomIndex-1;\r\n    } else if(nextNextRoomIndex <= 0) {\r\n        nextNextRoomIndex = 0;\r\n    }\r\n\r\n    return g.room[nextNextRoomIndex][4]\r\n}\r\n\r\nfunction drawRoom() {\r\n\r\n    console.log(\"drawing room\")\r\n\r\n    g.msgContainer.style.display=\"none\";\r\n    g.codeContainer.style.display=\"none\";\r\n    g.ctx.clearRect(0, 0, g.w, g.h);\r\n\r\n    const r = getRoom();\r\n\r\n    g.ctx.fillStyle = r[3];\r\n    g.ctx.fillRect(0, 0, g.w, g.h);\r\n\r\n    let xdiff = Math.round(g.w > g.h ? g.w/10 : g.w/8);\r\n    let ydiff = Math.round(g.w > g.h ? g.h/8 : g.h/15);\r\n\r\n    // Ceiling\r\n    var grd = g.ctx.createLinearGradient(0, 0, 0, ydiff);\r\n    grd.addColorStop(0, g.alphaR0);\r\n    grd.addColorStop(1, g.alphaR1);\r\n    g.ctx.fillStyle = grd;\r\n    g.ctx.fillRect(0, 0, g.w, ydiff);\r\n\r\n    // Floor\r\n    var grd = g.ctx.createLinearGradient(0, g.h, 0, g.h-ydiff);\r\n    grd.addColorStop(0, g.alphaR0);\r\n    grd.addColorStop(1, g.alphaR1);\r\n    g.ctx.fillStyle = grd;\r\n    g.ctx.fillRect(0, g.h-ydiff, g.w, ydiff);\r\n\r\n    // left view\r\n    if(r[0] === 0) {\r\n        g.ctx.line(0,ydiff,xdiff,ydiff)\r\n        g.ctx.line(0,g.h-ydiff,xdiff,g.h-ydiff)\r\n\r\n        g.ctx.fillStyle = g.alphaR1\r\n        g.ctx.fillRect(0,ydiff,xdiff,g.h-ydiff*2)\r\n\r\n    } else {\r\n        g.ctx.drawWall(0,0,xdiff, ydiff, xdiff,g.h-ydiff,0,g.h, r[3],g.alphaR0,g.alphaR1)\r\n\r\n        if(r[4] != 0 && !r[4].startsWith(\"code\")) {\r\n            \r\n            g.ctx.save();\r\n\r\n            const aa = ydiff/1.5;\r\n            const bb = ydiff/3;\r\n\r\n            g.ctx.translate(0,g.h2)\r\n\r\n            g.ctx.beginPath();\r\n\r\n            g.ctx.moveTo(0,-aa);\r\n            g.ctx.lineTo(xdiff/2, -bb);\r\n            g.ctx.lineTo(xdiff/2, bb);\r\n            g.ctx.lineTo(0, aa);\r\n\r\n            var grd = g.ctx.createLinearGradient(0, -aa, 0, aa);\r\n            grd.addColorStop(0, \"rgba(0,0,0,0.4)\");\r\n            grd.addColorStop(1, \"rgba(0,0,0,0.6)\");\r\n            g.ctx.fillStyle = grd;\r\n            g.ctx.fill();\r\n            g.ctx.stroke();\r\n\r\n            g.ctx.restore();\r\n        }\r\n    }\r\n\r\n    // center view\r\n    if(r[1] === 0) {\r\n        // // draw room one step forward\r\n\r\n        const nextRoom = getRoom(1)\r\n        \r\n        var grd = g.ctx.createLinearGradient(xdiff, ydiff, xdiff, ydiff+ydiff);\r\n        grd.addColorStop(0, g.alphaR1);\r\n        grd.addColorStop(1, g.alphaR2);\r\n        g.ctx.fillStyle = nextRoom[3]\r\n        g.ctx.fillRect(xdiff, ydiff, g.w-xdiff*2, ydiff);\r\n        g.ctx.fillStyle = grd;\r\n        g.ctx.fillRect(xdiff, ydiff, g.w-xdiff*2, ydiff);\r\n\r\n        var grd = g.ctx.createLinearGradient(xdiff, g.h-ydiff, xdiff, g.h-ydiff*2);\r\n        grd.addColorStop(0, g.alphaR1);\r\n        grd.addColorStop(1, g.alphaR2);\r\n        g.ctx.fillStyle = nextRoom[3]\r\n        g.ctx.fillRect(xdiff, g.h-ydiff*2, g.w-xdiff*2, ydiff);\r\n        g.ctx.fillStyle = grd;\r\n        g.ctx.fillRect(xdiff, g.h-ydiff*2, g.w-xdiff*2, ydiff);\r\n\r\n        // left wall\r\n        g.ctx.drawWall(xdiff,ydiff,xdiff+xdiff, ydiff+ydiff, xdiff+xdiff,g.h-ydiff-ydiff,xdiff,g.h-ydiff, nextRoom[3],g.alphaR1,g.alphaR2)\r\n\r\n        if(nextRoom[4] != 0) {\r\n            \r\n            g.ctx.save();\r\n\r\n            const aa = ydiff/2.5;\r\n            const bb = ydiff/4;\r\n\r\n            g.ctx.translate(xdiff*1.25,g.h2)\r\n\r\n            g.ctx.beginPath();\r\n\r\n            g.ctx.moveTo(0,-aa);\r\n            g.ctx.lineTo(xdiff/2, -bb);\r\n            g.ctx.lineTo(xdiff/2, bb);\r\n            g.ctx.lineTo(0, aa);\r\n\r\n            var grd = g.ctx.createLinearGradient(0, -aa, 0, aa);\r\n            grd.addColorStop(0, \"rgba(0,0,0,0.4)\");\r\n            grd.addColorStop(1, \"rgba(0,0,0,0.6)\");\r\n            g.ctx.fillStyle = grd;\r\n            g.ctx.fill();\r\n            g.ctx.stroke();\r\n\r\n            g.ctx.restore();\r\n        }\r\n\r\n        if(nextRoom[1] != 0) {\r\n\r\n            g.ctx.fillStyle = nextRoom[3]\r\n            g.ctx.fillRect(xdiff*2,ydiff*2,g.w-xdiff*4,g.h-ydiff*4)\r\n            \r\n            g.ctx.fillStyle = g.alphaR2\r\n            g.ctx.fillRect(xdiff*2,ydiff*2,g.w-xdiff*4,g.h-ydiff*4)\r\n\r\n            if(nextRoom[5] != 0 && nextRoom[5].startsWith(\"code\")) {\r\n                console.log(\"code\");\r\n    \r\n                const w = (g.w-xdiff*2)/2;\r\n\r\n                g.ctx.save();\r\n    \r\n                g.ctx.translate(g.w2,g.h2)\r\n    \r\n                g.ctx.fillStyle = \"rgba(255,255,255,0.1)\";\r\n    \r\n                g.ctx.fillRect(-w/2,-w/4,w,w/2)\r\n    \r\n                g.ctx.restore();\r\n            }\r\n\r\n\r\n\r\n\r\n        } else {\r\n            // Room two steps ahead\r\n            g.ctx.fillStyle = getNextNextRoomColor();\r\n            g.ctx.fillRect(xdiff*2,ydiff*2,g.w-xdiff*4,g.h-ydiff*4)\r\n            g.ctx.fillStyle = g.alphaR2\r\n            g.ctx.fillRect(xdiff*2,ydiff*2,g.w-xdiff*4,g.h-ydiff*4)\r\n        }\r\n\r\n        \r\n\r\n        // right wall\r\n        g.ctx.drawWall(g.w-xdiff, ydiff,g.w-xdiff-xdiff,ydiff+ydiff, g.w-xdiff-xdiff,g.h-ydiff-ydiff,g.w-xdiff,g.h-ydiff, nextRoom[3],g.alphaR1,g.alphaR2)\r\n\r\n\r\n\r\n    } else {\r\n        // A wall is in front of us\r\n        g.ctx.fillStyle = g.alphaR1,g.alphaR1\r\n        g.ctx.fillRect(xdiff, ydiff, g.w-2*xdiff, g.h-2*ydiff);\r\n\r\n        // Write text message\r\n        if(r[5] != 0) {\r\n            if(r[5].startsWith(\"code\")) {\r\n                g.codeInput.innerHTML = g.code[r[5]][2]();\r\n                g.codeContainer.style.display=\"block\";\r\n            } else {\r\n                g.msg.innerText = r[5];\r\n                g.msgContainer.style.display=\"block\";\r\n            }\r\n        }\r\n\r\n        // Write code message\r\n\r\n    }\r\n\r\n    // right view\r\n    if(r[2] === 0) {\r\n        g.ctx.line(g.w,ydiff,g.w-xdiff,ydiff)\r\n        g.ctx.line(g.w,g.h-ydiff,g.w-xdiff,g.h-ydiff)\r\n\r\n        g.ctx.fillStyle = g.alphaR1\r\n        g.ctx.fillRect(g.w-xdiff,ydiff,xdiff,g.h-ydiff*2)\r\n    } else {\r\n\r\n        g.ctx.drawWall(g.w, 0,g.w-xdiff,ydiff, g.w-xdiff,g.h-ydiff,g.w,g.h, r[3],g.alphaR0,g.alphaR1)\r\n\r\n        if(r[6] != 0) {\r\n            \r\n            g.ctx.beginPath();\r\n\r\n            g.ctx.moveTo(g.w,g.h2-ydiff/2);\r\n            g.ctx.lineTo(g.w-xdiff+xdiff/2, g.h2-ydiff/3);\r\n            g.ctx.lineTo(g.w-xdiff+xdiff/2,g.h2+ydiff/3);\r\n            g.ctx.lineTo(g.w, g.h2+ydiff/2);\r\n            g.ctx.lineTo(g.w,g.h2-ydiff/2);\r\n\r\n            var grd = g.ctx.createLinearGradient(0, g.h2-ydiff, 0, g.h2+ydiff);\r\n            grd.addColorStop(0, \"rgba(0,0,0,0.4)\");\r\n            grd.addColorStop(1, \"rgba(0,0,0,0.6)\");\r\n            g.ctx.fillStyle = grd;\r\n            g.ctx.fill();\r\n            g.ctx.stroke();\r\n        }\r\n        \r\n    }\r\n\r\n    g.ctx.beginPath();\r\n    g.ctx.rect(xdiff, ydiff, g.w-2*xdiff, g.h-2*ydiff);\r\n    g.ctx.stroke();\r\n\r\n    \r\n    // const t = g.text[`t${g.pos}${g.dir}`];\r\n    // if(t) {\r\n    //    g.msg.innerText = t;\r\n    //    g.msgContainer.style.display=\"block\";\r\n    // }\r\n\r\n    // const c = g.code[`c${g.pos}${g.dir}`];\r\n\r\n    // if(c) {\r\n    //     g.codeInput.innerHTML = c[2]();\r\n    //     g.codeContainer.style.display=\"block\";\r\n    // }\r\n}\r\n\r\n/* -*- mode: javascript; tab-width: 4; indent-tabs-mode: nil; -*-\r\n*\r\n* Copyright (c) 2011-2013 Marcus Geelnard\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty. In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n*\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n*\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n*    claim that you wrote the original software. If you use this software\r\n*    in a product, an acknowledgment in the product documentation would be\r\n*    appreciated but is not required.\r\n*\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n*    misrepresented as being the original software.\r\n*\r\n* 3. This notice may not be removed or altered from any source\r\n*    distribution.\r\n*\r\n*/\r\n\r\n\"use strict\";\r\n\r\nvar CPlayer = function() {\r\n\r\n    //--------------------------------------------------------------------------\r\n    // Private methods\r\n    //--------------------------------------------------------------------------\r\n\r\n    // Oscillators\r\n    var osc_sin = function (value) {\r\n        return Math.sin(value * 6.283184);\r\n    };\r\n\r\n    var osc_saw = function (value) {\r\n        return 2 * (value % 1) - 1;\r\n    };\r\n\r\n    var osc_square = function (value) {\r\n        return (value % 1) < 0.5 ? 1 : -1;\r\n    };\r\n\r\n    var osc_tri = function (value) {\r\n        var v2 = (value % 1) * 4;\r\n        if(v2 < 2) return v2 - 1;\r\n        return 3 - v2;\r\n    };\r\n\r\n    var getnotefreq = function (n) {\r\n        // 174.61.. / 44100 = 0.003959503758 (F3)\r\n        return 0.003959503758 * Math.pow(2, (n - 128) / 12);\r\n    };\r\n\r\n    var createNote = function (instr, n, rowLen) {\r\n        var osc1 = mOscillators[instr.i[0]],\r\n            o1vol = instr.i[1],\r\n            o1xenv = instr.i[3],\r\n            osc2 = mOscillators[instr.i[4]],\r\n            o2vol = instr.i[5],\r\n            o2xenv = instr.i[8],\r\n            noiseVol = instr.i[9],\r\n            attack = instr.i[10] * instr.i[10] * 4,\r\n            sustain = instr.i[11] * instr.i[11] * 4,\r\n            release = instr.i[12] * instr.i[12] * 4,\r\n            releaseInv = 1 / release,\r\n            arp = instr.i[13],\r\n            arpInterval = rowLen * Math.pow(2, 2 - instr.i[14]);\r\n\r\n        var noteBuf = new Int32Array(attack + sustain + release);\r\n\r\n        // Re-trig oscillators\r\n        var c1 = 0, c2 = 0;\r\n\r\n        // Local variables.\r\n        var j, j2, e, t, rsample, o1t, o2t;\r\n\r\n        // Generate one note (attack + sustain + release)\r\n        for (j = 0, j2 = 0; j < attack + sustain + release; j++, j2++) {\r\n            if (j2 >= 0) {\r\n                // Switch arpeggio note.\r\n                arp = (arp >> 8) | ((arp & 255) << 4);\r\n                j2 -= arpInterval;\r\n\r\n                // Calculate note frequencies for the oscillators\r\n                o1t = getnotefreq(n + (arp & 15) + instr.i[2] - 128);\r\n                o2t = getnotefreq(n + (arp & 15) + instr.i[6] - 128) * (1 + 0.0008 * instr.i[7]);\r\n            }\r\n\r\n            // Envelope\r\n            e = 1;\r\n            if (j < attack) {\r\n                e = j / attack;\r\n            } else if (j >= attack + sustain) {\r\n                e -= (j - attack - sustain) * releaseInv;\r\n            }\r\n\r\n            // Oscillator 1\r\n            t = o1t;\r\n            if (o1xenv) {\r\n                t *= e * e;\r\n            }\r\n            c1 += t;\r\n            rsample = osc1(c1) * o1vol;\r\n\r\n            // Oscillator 2\r\n            t = o2t;\r\n            if (o2xenv) {\r\n                t *= e * e;\r\n            }\r\n            c2 += t;\r\n            rsample += osc2(c2) * o2vol;\r\n\r\n            // Noise oscillator\r\n            if (noiseVol) {\r\n                rsample += (2 * Math.random() - 1) * noiseVol;\r\n            }\r\n\r\n            // Add to (mono) channel buffer\r\n            noteBuf[j] = (80 * rsample * e) | 0;\r\n        }\r\n\r\n        return noteBuf;\r\n    };\r\n\r\n\r\n    //--------------------------------------------------------------------------\r\n    // Private members\r\n    //--------------------------------------------------------------------------\r\n\r\n    // Array of oscillator functions\r\n    var mOscillators = [\r\n        osc_sin,\r\n        osc_square,\r\n        osc_saw,\r\n        osc_tri\r\n    ];\r\n\r\n    // Private variables set up by init()\r\n    var mSong, mLastRow, mCurrentCol, mNumWords, mMixBuf;\r\n\r\n\r\n    //--------------------------------------------------------------------------\r\n    // Initialization\r\n    //--------------------------------------------------------------------------\r\n\r\n    this.init = function (song) {\r\n        // Define the song\r\n        mSong = song;\r\n\r\n        // Init iteration state variables\r\n        mLastRow = song.endPattern;\r\n        mCurrentCol = 0;\r\n\r\n        // Prepare song info\r\n        mNumWords =  song.rowLen * song.patternLen * (mLastRow + 1) * 2;\r\n\r\n        // Create work buffer (initially cleared)\r\n        mMixBuf = new Int32Array(mNumWords);\r\n    };\r\n\r\n\r\n    //--------------------------------------------------------------------------\r\n    // Public methods\r\n    //--------------------------------------------------------------------------\r\n\r\n    // Generate audio data for a single track\r\n    this.generate = function () {\r\n        // Local variables\r\n        var i, j, b, p, row, col, n, cp,\r\n            k, t, lfor, e, x, rsample, rowStartSample, f, da;\r\n\r\n        // Put performance critical items in local variables\r\n        var chnBuf = new Int32Array(mNumWords),\r\n            instr = mSong.songData[mCurrentCol],\r\n            rowLen = mSong.rowLen,\r\n            patternLen = mSong.patternLen;\r\n\r\n        // Clear effect state\r\n        var low = 0, band = 0, high;\r\n        var lsample, filterActive = false;\r\n\r\n        // Clear note cache.\r\n        var noteCache = [];\r\n\r\n         // Patterns\r\n         for (p = 0; p <= mLastRow; ++p) {\r\n            cp = instr.p[p];\r\n\r\n            // Pattern rows\r\n            for (row = 0; row < patternLen; ++row) {\r\n                // Execute effect command.\r\n                var cmdNo = cp ? instr.c[cp - 1].f[row] : 0;\r\n                if (cmdNo) {\r\n                    instr.i[cmdNo - 1] = instr.c[cp - 1].f[row + patternLen] || 0;\r\n\r\n                    // Clear the note cache since the instrument has changed.\r\n                    if (cmdNo < 16) {\r\n                        noteCache = [];\r\n                    }\r\n                }\r\n\r\n                // Put performance critical instrument properties in local variables\r\n                var oscLFO = mOscillators[instr.i[15]],\r\n                    lfoAmt = instr.i[16] / 512,\r\n                    lfoFreq = Math.pow(2, instr.i[17] - 9) / rowLen,\r\n                    fxLFO = instr.i[18],\r\n                    fxFilter = instr.i[19],\r\n                    fxFreq = instr.i[20] * 43.23529 * 3.141592 / 44100,\r\n                    q = 1 - instr.i[21] / 255,\r\n                    dist = instr.i[22] * 1e-5,\r\n                    drive = instr.i[23] / 32,\r\n                    panAmt = instr.i[24] / 512,\r\n                    panFreq = 6.283184 * Math.pow(2, instr.i[25] - 9) / rowLen,\r\n                    dlyAmt = instr.i[26] / 255,\r\n                    dly = instr.i[27] * rowLen & ~1;  // Must be an even number\r\n\r\n                // Calculate start sample number for this row in the pattern\r\n                rowStartSample = (p * patternLen + row) * rowLen;\r\n\r\n                // Generate notes for this pattern row\r\n                for (col = 0; col < 4; ++col) {\r\n                    n = cp ? instr.c[cp - 1].n[row + col * patternLen] : 0;\r\n                    if (n) {\r\n                        if (!noteCache[n]) {\r\n                            noteCache[n] = createNote(instr, n, rowLen);\r\n                        }\r\n\r\n                        // Copy note from the note cache\r\n                        var noteBuf = noteCache[n];\r\n                        for (j = 0, i = rowStartSample * 2; j < noteBuf.length; j++, i += 2) {\r\n                          chnBuf[i] += noteBuf[j];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Perform effects for this pattern row\r\n                for (j = 0; j < rowLen; j++) {\r\n                    // Dry mono-sample\r\n                    k = (rowStartSample + j) * 2;\r\n                    rsample = chnBuf[k];\r\n\r\n                    // We only do effects if we have some sound input\r\n                    if (rsample || filterActive) {\r\n                        // State variable filter\r\n                        f = fxFreq;\r\n                        if (fxLFO) {\r\n                            f *= oscLFO(lfoFreq * k) * lfoAmt + 0.5;\r\n                        }\r\n                        f = 1.5 * Math.sin(f);\r\n                        low += f * band;\r\n                        high = q * (rsample - band) - low;\r\n                        band += f * high;\r\n                        rsample = fxFilter == 3 ? band : fxFilter == 1 ? high : low;\r\n\r\n                        // Distortion\r\n                        if (dist) {\r\n                            rsample *= dist;\r\n                            rsample = rsample < 1 ? rsample > -1 ? osc_sin(rsample*.25) : -1 : 1;\r\n                            rsample /= dist;\r\n                        }\r\n\r\n                        // Drive\r\n                        rsample *= drive;\r\n\r\n                        // Is the filter active (i.e. still audiable)?\r\n                        filterActive = rsample * rsample > 1e-5;\r\n\r\n                        // Panning\r\n                        t = Math.sin(panFreq * k) * panAmt + 0.5;\r\n                        lsample = rsample * (1 - t);\r\n                        rsample *= t;\r\n                    } else {\r\n                        lsample = 0;\r\n                    }\r\n\r\n                    // Delay is always done, since it does not need sound input\r\n                    if (k >= dly) {\r\n                        // Left channel = left + right[-p] * t\r\n                        lsample += chnBuf[k-dly+1] * dlyAmt;\r\n\r\n                        // Right channel = right + left[-p] * t\r\n                        rsample += chnBuf[k-dly] * dlyAmt;\r\n                    }\r\n\r\n                    // Store in stereo channel buffer (needed for the delay effect)\r\n                    chnBuf[k] = lsample | 0;\r\n                    chnBuf[k+1] = rsample | 0;\r\n\r\n                    // ...and add to stereo mix buffer\r\n                    mMixBuf[k] += lsample | 0;\r\n                    mMixBuf[k+1] += rsample | 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Next iteration. Return progress (1.0 == done!).\r\n        mCurrentCol++;\r\n        return mCurrentCol / mSong.numChannels;\r\n    };\r\n\r\n    // Create a WAVE formatted Uint8Array from the generated audio data\r\n    this.createWave = function() {\r\n        // Create WAVE header\r\n        var headerLen = 44;\r\n        var l1 = headerLen + mNumWords * 2 - 8;\r\n        var l2 = l1 - 36;\r\n        var wave = new Uint8Array(headerLen + mNumWords * 2);\r\n        wave.set(\r\n            [82,73,70,70,\r\n             l1 & 255,(l1 >> 8) & 255,(l1 >> 16) & 255,(l1 >> 24) & 255,\r\n             87,65,86,69,102,109,116,32,16,0,0,0,1,0,2,0,\r\n             68,172,0,0,16,177,2,0,4,0,16,0,100,97,116,97,\r\n             l2 & 255,(l2 >> 8) & 255,(l2 >> 16) & 255,(l2 >> 24) & 255]\r\n        );\r\n\r\n        // Append actual wave data\r\n        for (var i = 0, idx = headerLen; i < mNumWords; ++i) {\r\n            // Note: We clamp here\r\n            var y = mMixBuf[i];\r\n            y = y < -32767 ? -32767 : (y > 32767 ? 32767 : y);\r\n            wave[idx++] = y & 255;\r\n            wave[idx++] = (y >> 8) & 255;\r\n        }\r\n\r\n        // Return the WAVE formatted typed array\r\n        return wave;\r\n    };\r\n\r\n    // Get n samples of wave data at time t [s]. Wave data in range [-2,2].\r\n    this.getData = function(t, n) {\r\n        var i = 2 * Math.floor(t * 44100);\r\n        var d = new Array(n);\r\n        for (var j = 0; j < 2*n; j += 1) {\r\n            var k = i + j;\r\n            d[j] = t > 0 && k < mMixBuf.length ? mMixBuf[k] / 32768 : 0;\r\n        }\r\n        return d;\r\n    };\r\n};\r\n\r\n    // // This music has been exported by SoundBox. You can use it with\r\n    // // http://sb.bitsnbites.eu/player-small.js in your own product.\r\n\r\n    // // See http://sb.bitsnbites.eu/demo.html for an example of how to\r\n    // // use it in a demo.\r\n\r\n    // // Song data\r\n    // var song = {\r\n    //     songData: [\r\n    //       { // Instrument 0\r\n    //         i: [\r\n    //         2, // OSC1_WAVEFORM\r\n    //         100, // OSC1_VOL\r\n    //         128, // OSC1_SEMI\r\n    //         0, // OSC1_XENV\r\n    //         3, // OSC2_WAVEFORM\r\n    //         201, // OSC2_VOL\r\n    //         128, // OSC2_SEMI\r\n    //         0, // OSC2_DETUNE\r\n    //         0, // OSC2_XENV\r\n    //         0, // NOISE_VOL\r\n    //         5, // ENV_ATTACK\r\n    //         6, // ENV_SUSTAIN\r\n    //         58, // ENV_RELEASE\r\n    //         0, // ARP_CHORD\r\n    //         0, // ARP_SPEED\r\n    //         0, // LFO_WAVEFORM\r\n    //         195, // LFO_AMT\r\n    //         6, // LFO_FREQ\r\n    //         1, // LFO_FX_FREQ\r\n    //         2, // FX_FILTER\r\n    //         135, // FX_FREQ\r\n    //         0, // FX_RESONANCE\r\n    //         0, // FX_DIST\r\n    //         32, // FX_DRIVE\r\n    //         147, // FX_PAN_AMT\r\n    //         6, // FX_PAN_FREQ\r\n    //         121, // FX_DELAY_AMT\r\n    //         6 // FX_DELAY_TIME\r\n    //         ],\r\n    //         // Patterns\r\n    //         p: [1],\r\n    //         // Columns\r\n    //         c: [\r\n    //           {n: [123,,135,130,123,,123,,130,131,128,,123,,123,130,135,,135,,123,131,130,,126,,138,,137,,130],\r\n    //            f: []}\r\n    //         ]\r\n    //       },\r\n    //     ],\r\n    //     rowLen: 5513,   // In sample lengths\r\n    //     patternLen: 32,  // Rows per pattern\r\n    //     endPattern: 0,  // End pattern\r\n    //     numChannels: 1  // Number of channels\r\n    //   };\r\n  "]}